<?xml version="1.0" ?>
<sdf version="1.6">
  <model name="ammr">

    <!-- base_footprint-->
    <link name="base_footprint"/>

    <!-- base_link -->
    <link name="base_link">
      <visual name="base_link_visual">
        <pose>0 0 0.145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.940 0.610 0.452</size> <!-- Orignial: 1.128 0.798 0.320--> 
          </box>
        </geometry>
        <material>
          <ambient>0.5 0.5 0.5 1.0</ambient>
          <diffuse>0.5 0.5 0.5 1.0</diffuse>
        </material>
      </visual>
      <collision name="base_link_collision">
        <pose>0 0 0.145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.940 0.610 0.452</size>
          </box>
        </geometry>
      </collision>
      <inertial>
        <mass>20.0</mass>
        <pose>0 0 0.145 0 0 0</pose>
        <inertia>
          <ixx>1.23</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.29</iyy>
          <iyz>0</iyz>
          <izz>3.18</izz>
        </inertia>
      </inertial>
    </link>

    <joint name="base_footprint_to_base_link" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.09 0.0 0.0 0.0</pose>
    </joint>

    <!-- base_scan_front link with laser sensor -->
    <link name="base_scan_front">
      <!-- visual/collision origin offset: 0 0 0.0218 -->
      <visual name="base_scan_front_visual">
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 0 0 1</ambient>
          <diffuse>1 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="base_scan_front_collision">
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <inertia>
          <ixx>0.00146</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00146</iyy>
          <iyz>0</iyz>
          <izz>0.00125</izz>
        </inertia>
      </inertial>
      <!-- Laser sensor as child of the link -->
      <sensor name="hls_lfcd_lds_front" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <!-- 센서의 위치: URDF의 pose 값 (-0.114 0 0.121 0 0 3.141592) -->
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.0</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.05</min>
            <max>25.0</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <!-- 플러그인 부분은 SDF에서도 동일하게 포함할 수 있으나, 플러그인 인자는 실제 환경에 맞게 조정 필요 -->
        <plugin name="turtlebot3_laserscan_front" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_front</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan_front</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- base_scan_rear link with laser sensor -->
    <link name="base_scan_rear">
      <visual name="base_scan_rear_visual">
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 0 0 1</ambient>
          <diffuse>1 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="base_scan_rear_collision">
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose>
        <inertia>
          <ixx>0.00146</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00146</iyy>
          <iyz>0</iyz>
          <izz>0.00125</izz>
        </inertia>
      </inertial>
      <sensor name="hls_lfcd_lds_rear" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose> <!-- -0.480 0.315 0.231 3.14159 0 2.35619 -->
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.0</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.05</min>
            <max>25.0</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="turtlebot3_laserscan_back" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_rear</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan_rear</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- camera_front with depth sensor plugin -->
    <link name="camera_front">
      <visual name="camera_front_visual">
        <pose>0.534 0 0.277 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_front_collision">
        <pose>0.534 0 0.277 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>0.534 0 0.277 0 0 0</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_front" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_front" filename="libgazebo_ros_camera.so">
          <camera_name>depth_front_camera</camera_name>
          <frame_name>front_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- camera_rear with depth sensor plugin -->
    <link name="camera_rear">
      <pose>0 0 0 0 0 0</pose>
      <visual name="camera_rear_visual">
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_rear_collision">
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_rear" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_rear" filename="libgazebo_ros_camera.so">
          <camera_name>depth_rear_camera</camera_name>
          <frame_name>rear_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- camera_right with depth sensor plugin -->
    <link name="camera_right">
      <pose>0 0 0 0 0 0</pose>
      <visual name="camera_right_visual">
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_right_collision">
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_right" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_right" filename="libgazebo_ros_camera.so">
          <camera_name>depth_right_camera</camera_name>
          <frame_name>right_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- camera_left with depth sensor plugin -->
    <link name="camera_left">
      <pose>0 0 0 0 0 0</pose>
      <visual name="camera_left_visual">
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_left_collision">
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_left" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_left" filename="libgazebo_ros_camera.so">
          <camera_name>depth_left_camera</camera_name>
          <frame_name>left_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- Joints -->
    <joint name="base_link_to_base_scan_front" type="fixed">
      <parent>base_link</parent>
      <child>base_scan_front</child>
      <pose>0.480 -0.315 0.216 3.14159 0 -0.7854</pose>
    </joint>
    <joint name="base_link_to_base_scan_rear" type="fixed">
      <parent>base_link</parent>
      <child>base_scan_rear</child>
      <pose>-0.480 0.315 0.216 3.14159 0 2.35619</pose>
    </joint>
    <joint name="base_link_to_camera_front" type="fixed">
      <parent>base_link</parent>
      <child>camera_front</child>
      <pose>0.534 0 0.277 0 0 0</pose>
    </joint>
    <joint name="base_link_to_camera_rear" type="fixed">
      <parent>base_link</parent>
      <child>camera_rear</child>
      <pose>-0.534 0 0.277 0 0 3.14159</pose>
    </joint>
    <joint name="base_link_to_camera_right" type="fixed">
      <parent>base_link</parent>
      <child>camera_right</child>
      <pose>0 -0.369 0.277 0 0 -1.5708</pose>
    </joint>
    <joint name="base_link_to_camera_left" type="fixed">
      <parent>base_link</parent>
      <child>camera_left</child>
      <pose>0 0.369 0.277 0 0 1.5708</pose>
    </joint>

    <!-- Wheel links and joints -->
    <link name="wheel_left_link">
      <pose>0 0 0 0 0 0</pose>
      <visual name="wheel_left_visual">
        <pose>0 0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="wheel_left_collision">
        <pose>0 0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>0 0.33 0.0 -1.5707963267949 0 0</pose>
        <inertia>
          <ixx>0.00223</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00223</iyy>
          <iyz>0</iyz>
          <izz>0.00405</izz>
        </inertia>
      </inertial>
    </link>

    <link name="wheel_right_link">
      <pose>0 0 0 0 0 0</pose>
      <visual name="wheel_right_visual">
        <pose>0 -0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="wheel_right_collision">
        <pose>0 -0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>0 -0.33 0.0 -1.5707963267949 0 0</pose>
        <inertia>
          <ixx>0.00223</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00223</iyy>
          <iyz>0</iyz>
          <izz>0.00405</izz>
        </inertia>
      </inertial>
    </link>

    <joint name="wheel_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <pose>0 0.33 0 -1.5708 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="wheel_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <pose>0 -0.33 0 -1.5708 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- Caster Link -->
    <link name="caster_rear_link">
      <pose>-0.4 0 0 -1.57 0 0</pose>
      <inertial>
        <mass>0.001</mass>
        <inertia>
          <ixx>0.00001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.00001</iyy>
          <iyz>0.000</iyz><?xml version="1.0" ?>
<sdf version="1.6">
  <model name="ammr">

    <!-- base_footprint-->
    <link name="base_footprint"/>

    <!-- base_link -->
    <link name="base_link">
      <visual name="base_link_visual">
        <pose>0 0 0.145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.940 0.610 0.452</size> <!-- Orignial: 1.128 0.798 0.320--> 
          </box>
        </geometry>
        <material>
          <ambient>0.5 0.5 0.5 1.0</ambient>
          <diffuse>0.5 0.5 0.5 1.0</diffuse>
        </material>
      </visual>
      <collision name="base_link_collision">
        <pose>0 0 0.145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.940 0.610 0.452</size>
          </box>
        </geometry>
      </collision>
      <inertial>
        <mass>20.0</mass>
        <pose>0 0 0.145 0 0 0</pose>
        <inertia>
          <ixx>1.23</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>2.29</iyy>
          <iyz>0</iyz>
          <izz>3.18</izz>
        </inertia>
      </inertial>
    </link>

    <joint name="base_footprint_to_base_link" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.09 0.0 0.0 0.0</pose>
    </joint>

    <!-- base_scan_front link with laser sensor -->
    <link name="base_scan_front">
      <!-- visual/collision origin offset: 0 0 0.0218 -->
      <visual name="base_scan_front_visual">
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 0 0 1</ambient>
          <diffuse>1 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="base_scan_front_collision">
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <inertia>
          <ixx>0.00146</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00146</iyy>
          <iyz>0</iyz>
          <izz>0.00125</izz>
        </inertia>
      </inertial>
      <!-- Laser sensor as child of the link -->
      <sensor name="hls_lfcd_lds_front" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <!-- 센서의 위치: URDF의 pose 값 (-0.114 0 0.121 0 0 3.141592) -->
        <pose>0.480 -0.315 0.231 3.14159 0 -0.7854</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.0</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.05</min>
            <max>25.0</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <!-- 플러그인 부분은 SDF에서도 동일하게 포함할 수 있으나, 플러그인 인자는 실제 환경에 맞게 조정 필요 -->
        <plugin name="turtlebot3_laserscan_front" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_front</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan_front</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- base_scan_rear link with laser sensor -->
    <link name="base_scan_rear">
      <visual name="base_scan_rear_visual">
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 0 0 1</ambient>
          <diffuse>1 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="base_scan_rear_collision">
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.082</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose>
        <inertia>
          <ixx>0.00146</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00146</iyy>
          <iyz>0</iyz>
          <izz>0.00125</izz>
        </inertia>
      </inertial>
      <sensor name="hls_lfcd_lds_rear" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>-0.480 0.315 0.231 3.14159 0 2.35619</pose> <!-- -0.480 0.315 0.231 3.14159 0 2.35619 -->
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.0</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.05</min>
            <max>25.0</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="turtlebot3_laserscan_back" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan_rear</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan_rear</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- camera_front with depth sensor plugin -->
    <link name="camera_front">
      <visual name="camera_front_visual">
        <pose>0.534 0 0.277 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_front_collision">
        <pose>0.534 0 0.277 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>0.534 0 0.277 0 0 0</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_front" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>0 0 0 0 0 0</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_front" filename="libgazebo_ros_camera.so">
          <camera_name>depth_front_camera</camera_name>
          <frame_name>front_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- camera_rear with depth sensor plugin -->
    <link name="camera_rear">
      <pose>0 0 0 0 0 0</pose>
      <visual name="camera_rear_visual">
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_rear_collision">
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_rear" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>-0.534 0 0.277 0 0 3.14159</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_rear" filename="libgazebo_ros_camera.so">
          <camera_name>depth_rear_camera</camera_name>
          <frame_name>rear_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- camera_right with depth sensor plugin -->
    <link name="camera_right">
      <pose>0 0 0 0 0 0</pose>
      <visual name="camera_right_visual">
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_right_collision">
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_right" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>0 -0.369 0.277 0 0 -1.5708</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_right" filename="libgazebo_ros_camera.so">
          <camera_name>depth_right_camera</camera_name>
          <frame_name>right_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- camera_left with depth sensor plugin -->
    <link name="camera_left">
      <pose>0 0 0 0 0 0</pose>
      <visual name="camera_left_visual">
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
        <material>
          <ambient>0 1 0 1</ambient>
          <diffuse>0 1 0 1</diffuse>
        </material>
      </visual>
      <collision name="camera_left_collision">
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_gazebo/meshes/zedxm.dae</uri>
            <scale>1 1 1</scale>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <mass>0.5</mass>
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <inertia>
          <ixx>0.00083</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00083</iyy>
          <iyz>0</iyz>
          <izz>0.00083</izz>
        </inertia>
      </inertial>
      <sensor name="depth_camera_left" type="depth">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <pose>0 0.369 0.277 0 0 1.5708</pose>
        <camera>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>10</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="depth_camera_controller_left" filename="libgazebo_ros_camera.so">
          <camera_name>depth_left_camera</camera_name>
          <frame_name>left_camera_center</frame_name>
          <hack_baseline>0</hack_baseline>
          <min_depth>0.001</min_depth>
        </plugin>
      </sensor>
    </link>

    <!-- Joints -->
    <joint name="base_link_to_base_scan_front" type="fixed">
      <parent>base_link</parent>
      <child>base_scan_front</child>
      <pose>0.480 -0.315 0.216 3.14159 0 -0.7854</pose>
    </joint>
    <joint name="base_link_to_base_scan_rear" type="fixed">
      <parent>base_link</parent>
      <child>base_scan_rear</child>
      <pose>-0.480 0.315 0.216 3.14159 0 2.35619</pose>
    </joint>
    <joint name="base_link_to_camera_front" type="fixed">
      <parent>base_link</parent>
      <child>camera_front</child>
      <pose>0.534 0 0.277 0 0 0</pose>
    </joint>
    <joint name="base_link_to_camera_rear" type="fixed">
      <parent>base_link</parent>
      <child>camera_rear</child>
      <pose>-0.534 0 0.277 0 0 3.14159</pose>
    </joint>
    <joint name="base_link_to_camera_right" type="fixed">
      <parent>base_link</parent>
      <child>camera_right</child>
      <pose>0 -0.369 0.277 0 0 -1.5708</pose>
    </joint>
    <joint name="base_link_to_camera_left" type="fixed">
      <parent>base_link</parent>
      <child>camera_left</child>
      <pose>0 0.369 0.277 0 0 1.5708</pose>
    </joint>

    <!-- Wheel links and joints -->
    <link name="wheel_left_link">
      <pose>0 0 0 0 0 0</pose>
      <visual name="wheel_left_visual">
        <pose>0 0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="wheel_left_collision">
        <pose>0 0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>0 0.33 0.0 -1.5707963267949 0 0</pose>
        <inertia>
          <ixx>0.00223</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00223</iyy>
          <iyz>0</iyz>
          <izz>0.00405</izz>
        </inertia>
      </inertial>
    </link>

    <link name="wheel_right_link">
      <pose>0 0 0 0 0 0</pose>
      <visual name="wheel_right_visual">
        <pose>0 -0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
        </material>
      </visual>
      <collision name="wheel_right_collision">
        <pose>0 -0.33 0.0 -1.5707963267949 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.09</radius>
            <length>0.05</length>
          </cylinder>
        </geometry>
      </collision>
      <inertial>
        <mass>1.0</mass>
        <pose>0 -0.33 0.0 -1.5707963267949 0 0</pose>
        <inertia>
          <ixx>0.00223</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00223</iyy>
          <iyz>0</iyz>
          <izz>0.00405</izz>
        </inertia>
      </inertial>
    </link>

    <joint name="wheel_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <pose>0 0.33 0 -1.5708 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="wheel_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <pose>0 -0.33 0 -1.5708 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- Caster Link -->
    <link name="caster_rear_link">
      <pose>-0.4 0 0 -1.57 0 0</pose>
      <inertial>
        <mass>0.001</mass>
        <inertia>
          <ixx>0.00001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.00001</iyy>
          <iyz>0.000</iyz>
          <izz>0.00001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.1110</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    <joint name="caster_rear_joint" type="ball">
      <parent>base_link</parent>
      <child>caster_rear_link</child>
    </joint>

    <link name="caster_front_link">
      <pose>0.4 0 0 -1.57 0 0</pose>
      <inertial>
        <mass>0.001</mass>
        <inertia>
          <ixx>0.00001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.00001</iyy>
          <iyz>0.000</iyz>
          <izz>0.00001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.1110</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    <joint name="caster_front_joint" type="ball">
      <parent>base_link</parent>
      <child>caster_front_link</child>
    </joint>

    <!-- Diff Drive Plugin -->
    <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">
      <ros/>
      <update_rate>60</update_rate>
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <wheel_separation>0.660</wheel_separation>
      <wheel_diameter>0.18</wheel_diameter>
      <max_wheel_torque>300</max_wheel_torque>
      <max_wheel_acceleration>1.5</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>

    <!-- Joint State Publisher Plugin -->
    <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>60</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>

  </model>
</sdf>

          <izz>0.00001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.1200</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    <joint name="caster_rear_joint" type="ball">
      <parent>base_link</parent>
      <child>caster_rear_link</child>
    </joint>

    <link name="caster_front_link">
      <pose>0.4 0 0 -1.57 0 0</pose>
      <inertial>
        <mass>0.001</mass>
        <inertia>
          <ixx>0.00001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.00001</iyy>
          <iyz>0.000</iyz>
          <izz>0.00001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.1200</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    <joint name="caster_front_joint" type="ball">
      <parent>base_link</parent>
      <child>caster_front_link</child>
    </joint>

    <!-- Diff Drive Plugin -->
    <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">
      <ros/>
      <update_rate>60</update_rate>
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>
      <wheel_separation>0.660</wheel_separation>
      <wheel_diameter>0.18</wheel_diameter>
      <max_wheel_torque>300</max_wheel_torque>
      <max_wheel_acceleration>1.5</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
    </plugin>

    <!-- Joint State Publisher Plugin -->
    <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>60</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>

  </model>
</sdf>
