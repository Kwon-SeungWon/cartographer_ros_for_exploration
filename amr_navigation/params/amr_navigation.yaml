amcl:
  ros__parameters:
    use_sim_time: false
    alpha1: 0.08
    alpha2: 0.01
    alpha3: 0.01
    alpha4: 0.08
    alpha5: 0.02
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 3.0
    laser_max_range: 25.0
    laser_min_range: 0.05
    laser_model_type: "likelihood_field"
    max_beams: 200
    max_particles: 10000
    min_particles: 3000
    odom_frame_id: "odom"
    pf_err: 0.01
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.05 #0.2
    tf_broadcast: true
    transform_tolerance: 0.5
    update_min_a: 0.2 #0.05
    update_min_d: 0.2 #0.05
    z_hit: 0.85
    z_rand: 0.15
    z_short: 0.05
    z_max: 0.05
    scan_topic: /scan
    set_initial_pose: true
    initial_pose:
      x: 0.0
      y: 0.05
      z: 0.0
      yaw: 0.0
    always_reset_initial_pose: false #false

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node
      # - opennav_docking_bt_node  # 

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: false

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: false

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.000001
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.00001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.42
      movement_time_allowance: 10.0

    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.2
      yaw_goal_tolerance: 0.1

    FollowPath:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "dwb_core::DWBLocalPlanner"
      angular_dist_threshold: 0.3
      forward_sampling_distance: 0.5
      rotate_to_heading_angular_vel: 0.3
      max_angular_accel: 1.0
      simulate_ahead_time: 0.5
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.3
      max_vel_y: 0.0
      max_vel_theta: 0.3
      min_speed_xy: 0.0
      max_speed_xy: 0.3
      min_speed_theta: 0.0
      acc_lim_x: 1.0
      acc_lim_y: 0.0
      acc_lim_theta: 1.0
      decel_lim_x: -1.0
      decel_lim_y: 0.0
      decel_lim_theta: -1.0
      vx_samples: 30
      vy_samples: 1
      vtheta_samples: 30
      sim_time: 3.0
      linear_granularity: 0.05
      angular_granularity: 0.05

      transform_tolerance: 0.5
      xy_goal_tolerance: 0.2
      trans_stopped_velocity: 0.2
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 20.0
      PathAlign.forward_point_distance: 0.3
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.3
      PathDist.scale: 32.0
      GoalDist.scale: 10.0
      RotateToGoal.scale: 50.0
      RotateToGoal.slowing_factor: 2.0
      RotateToGoal.lookahead_time: 3.0


    # FollowPath:
    #   plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"

    #   transform_tolerance: 0.1
    #   xy_goal_tolerance: 0.1
    #   trans_stopped_velocity: 0.05
    #   stateful: true
    #   use_velocity_scaled_lookahead_dist: false

    #   # 시뮬레이션 관련
    #   sim_time: 3.0
    #   max_lookahead_dist: 0.5    # forward_sampling_distance와 유사
    #   min_lookahead_dist: 0.2
    #   lookahead_time: 1.0        # simulate_ahead_time 유사 (혹은 3.0)

    #   use_approach_velocity_scaling: true
    #   approach_velocity_scaling_dist: 0.4
    #   min_approach_linear_velocity: 0.05
    #   max_approach_linear_velocity: 0.2  # max_vel_x

    #   # 속도 관련
    #   desired_linear_vel: 0.3
    #   lookahead_dist: 0.5
    #   lookahead_time: 1.0
    #   use_collision_detection: true
    #   max_allowed_time_to_collision_up_to_carrot: 1.0
    #   use_regulated_linear_velocity_scaling: true
    #   use_fixed_curvature_lookahead: false
    #   curvature_lookahead_dist: 0.25
    #   use_cost_regulated_linear_velocity_scaling: false
    #   regulated_linear_scaling_min_radius: 0.9
    #   regulated_linear_scaling_min_speed: 0.1
    #   max_robot_pose_search_dist: 10.0

    #   # 회전 제어
    #   use_rotate_to_heading: true
    #   rotate_to_heading_angular_vel: 0.25
    #   max_angular_accel: 0.8
    #   rotate_to_heading_min_angle: 0.2   # angular_dist_threshold

    #   # 기타
    #   linear_granularity: 0.05
    #   angular_granularity: 0.05
    #   regulate_turning: true
    #   allow_reversing: false
    #   enable_interpolation: true

velocity_smoother:
  ros__parameters:
    use_sim_time: false
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "CLOSED_LOOP"
    max_velocity: [0.3, 0.0, 0.4]
    min_velocity: [-0.3, 0.0, -0.4]
    max_accel: [1.5, 0.0, 2.0]
    max_decel: [-1.5, 0.0, -2.0]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_footprint
      use_sim_time: false
      rolling_window: true
      width: 20
      height: 20
      resolution: 0.05
      footprint: "[ [-0.57, -0.4], [-0.57, 0.4], [0.57, 0.4], [0.57, -0.4] ]"
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 6.0
        inflation_radius: 0.42
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        # observation_sources: scan obstacle tof_obstacle
        observation_sources: scan obstacle
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 10.0
          obstacle_min_range: 0.0

        obstacle:
          sensor_frame: "base_link"
          data_type: "PointCloud2"
          topic: /airbot_obstacle/pc_obstacle
          marking: True
          clearing: True
          obstacle_range: 2.5
          raytrace_range: 3.0
          inf_is_obstacle: False
          observation_persistence: 1.0
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0

        # tof_obstacle:  # tof_obstacle
        #   sensor_frame: "base_link"
        #   data_type: "LaserScan"
        #   topic: /tof  # tof topic
        #   marking: True
        #   clearing: True
        #   obstacle_range: 1.0
        #   raytrace_range: 1.0
        #   inf_is_obstacle: False
        #   observation_persistence: 1.0
        #   max_obstacle_height: 2.0
        #   min_obstacle_height: 0.0

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: false
      footprint: "[ [-0.57, -0.4], [-0.57, 0.4], [0.57, 0.4], [0.57, -0.4] ]"
      width: 40
      height: 40
      resolution: 0.1
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          obstacle_max_range: 10.0
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 6.0
        inflation_radius: 0.42
      always_send_full_costmap: True

map_server:
  ros__parameters:
    use_sim_time: false
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: "map_241115_4"

map_saver:
  ros__parameters:
    use_sim_time: false
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    # recovery_plugins: ["spin", "backup", "wait"]
    recovery_plugins: ["spin", "backup"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    # wait:
    #   plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_footprint
    transform_timeout: 0.1
    use_sim_time: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.0
    min_rotational_vel: 0.0
    rotational_acc_lim: 0.0

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

# planner_server:
#   ros__parameters:
#     expected_planner_frequency: 20.0
#     use_sim_time: false
#     planner_plugins: ["SmacPlanner"]
#     SmacPlanner:
#       plugin: "smac_planner/SmacPlanner"
#       tolerance: 0.5
#       # 추가 파라미터들을 환경에 맞게 조정

smoother_server:
  ros__parameters:
    use_sim_time: false
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.1
    use_sim_time: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.0
    min_rotational_vel: 0.0
    rotational_acc_lim: 0.0


robot_state_publisher:
  ros__parameters:
    use_sim_time: false

waypoint_follower:
  ros__parameters:
    use_sim_time: false
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

# docking_server:
#   ros__parameters:
#     controller_frequency: 10.0
#     initial_perception_timeout: 20.0  # Default 5.0 
#     wait_charge_timeout: 5.0
#     dock_approach_timeout: 30.0
#     undock_linear_tolerance: 0.05 
#     undock_angular_tolerance: 0.05
#     max_retries: 3
#     base_frame: "base_link"
#     fixed_frame: "odom"
#     dock_backwards: false
#     dock_prestaging_tolerance: 0.5
 
#     # Types of docks
#     dock_plugins: ['simple_charging_dock']
#     rosmaster_x3_dock:
#       plugin: 'opennav_docking::SimpleChargingDock'
#       docking_threshold: 0.02
#       staging_x_offset: 0.75
#       staging_yaw_offset: 3.14
#       use_external_detection_pose: true
#       use_battery_status: false
#       use_stall_detection: false
#       stall_velocity_threshold: 1.0
#       stall_effort_threshold: 1.0
#       charging_threshold: 0.5
 
#       external_detection_timeout: 1.0
#       external_detection_translation_x: -0.18
#       external_detection_translation_y: 0.0
#       external_detection_rotation_roll: -1.57
#       external_detection_rotation_pitch: 1.57
#       external_detection_rotation_yaw: 0.0
#       filter_coef: 0.1
 
#     # Dock instances
#     dock_database: $(find-pkg-share turtlebot3_navigation2)/config/dock_database.yaml
 
#     controller:
#       k_phi: 3.0
#       k_delta: 2.0
#       beta: 0.4
#       lambda: 2.0
#       v_linear_min: 0.1
#       v_linear_max: 0.15
#       v_angular_max: 0.75
#       slowdown_radius: 0.25
#       use_collision_detection: true
#       costmap_topic: "/local_costmap/costmap_raw"
#       footprint_topic: "/local_costmap/published_footprint"
#       transform_tolerance: 0.1
#       projection_time: 5.0
#       simulation_step: 0.1
#       dock_collision_threshold: 0.3